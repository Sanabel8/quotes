/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;
import com.google.gson.Gson;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.Reader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class App {
    public static void main(String[] args) {
        String apiURL="https://api.quotable.io/random";
        try{
            Gson gson1 = new Gson();
            URL url =new URL(apiURL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status=connection.getResponseCode();
            if(status == 200){
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line = bufferedReader.readLine();
                Quote q1 = gson1.fromJson(line, Quote.class);
                System.out.println("from API "+ q1.toString());
                bufferedReader.close();

            }else{
                try {
                    Gson gson2=new Gson();
                    Reader reader = new FileReader("app/src/main/resources/recentquotes.json");
                    Quote[] q1 = gson2.fromJson(reader, Quote[].class);
                    int min = 0;
                    int max = q1.length - 1;
                    int b = (int) (Math.random() * (max - min + 1) + min);
                    System.out.println("from local file");
                    System.out.println(q1[b].toString());

                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
            connection.disconnect();

        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }


    }
}
